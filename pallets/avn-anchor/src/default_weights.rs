
//! Autogenerated weights for pallet_avn_anchor
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-10-28, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-28-16`, CPU: `AMD EPYC 7R32`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// ./frame-weight-template.hbs
// --pallet
// pallet_avn_anchor
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// avn_anchor_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_avn_anchor.
pub trait WeightInfo {
	fn register_chain_handler() -> Weight;
	fn update_chain_handler() -> Weight;
	fn submit_checkpoint_with_identity() -> Weight;
	fn signed_register_chain_handler() -> Weight;
	fn signed_update_chain_handler() -> Weight;
	fn signed_submit_checkpoint_with_identity() -> Weight;
	fn set_checkpoint_fee() -> Weight;
}

/// Weights for pallet_avn_anchor using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:1)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextChainId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextChainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:0 w:1)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:0 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn register_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3517`
		// Minimum execution time: 21_950_000 picoseconds.
		Weight::from_parts(22_700_000, 3517)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:2 w:2)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	fn update_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `327`
		//  Estimated: `6044`
		// Minimum execution time: 29_240_000 picoseconds.
		Weight::from_parts(29_691_000, 6044)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextCheckpointId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextCheckpointId` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::CheckpointFee` (r:1 w:0)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `TokenManager::AVTTokenContract` (r:1 w:0)
	/// Proof: `TokenManager::AVTTokenContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Checkpoints` (r:0 w:1)
	/// Proof: `AvnAnchor::Checkpoints` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn submit_checkpoint_with_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `648`
		//  Estimated: `6196`
		// Minimum execution time: 92_751_000 picoseconds.
		Weight::from_parts(93_781_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:1)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextChainId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextChainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:0 w:1)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:0 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn signed_register_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3517`
		// Minimum execution time: 163_752_000 picoseconds.
		Weight::from_parts(166_722_000, 3517)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:2 w:2)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	fn signed_update_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `343`
		//  Estimated: `6044`
		// Minimum execution time: 174_893_000 picoseconds.
		Weight::from_parts(176_013_000, 6044)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextCheckpointId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextCheckpointId` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::CheckpointFee` (r:1 w:0)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `TokenManager::AVTTokenContract` (r:1 w:0)
	/// Proof: `TokenManager::AVTTokenContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Checkpoints` (r:0 w:1)
	/// Proof: `AvnAnchor::Checkpoints` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn signed_submit_checkpoint_with_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `614`
		//  Estimated: `6196`
		// Minimum execution time: 236_483_000 picoseconds.
		Weight::from_parts(238_713_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `AvnAnchor::CheckpointFee` (r:0 w:1)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_checkpoint_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 9_960_000 picoseconds.
		Weight::from_parts(10_250_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:1)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextChainId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextChainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:0 w:1)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:0 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn register_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3517`
		// Minimum execution time: 21_950_000 picoseconds.
		Weight::from_parts(22_700_000, 3517)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:2 w:2)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	fn update_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `327`
		//  Estimated: `6044`
		// Minimum execution time: 29_240_000 picoseconds.
		Weight::from_parts(29_691_000, 6044)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextCheckpointId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextCheckpointId` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::CheckpointFee` (r:1 w:0)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `TokenManager::AVTTokenContract` (r:1 w:0)
	/// Proof: `TokenManager::AVTTokenContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Checkpoints` (r:0 w:1)
	/// Proof: `AvnAnchor::Checkpoints` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn submit_checkpoint_with_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `648`
		//  Estimated: `6196`
		// Minimum execution time: 92_751_000 picoseconds.
		Weight::from_parts(93_781_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:1)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextChainId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextChainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:0 w:1)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:0 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn signed_register_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3517`
		// Minimum execution time: 163_752_000 picoseconds.
		Weight::from_parts(166_722_000, 3517)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:2 w:2)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::ChainData` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainData` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	fn signed_update_chain_handler() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `343`
		//  Estimated: `6044`
		// Minimum execution time: 174_893_000 picoseconds.
		Weight::from_parts(176_013_000, 6044)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AvnAnchor::ChainHandlers` (r:1 w:0)
	/// Proof: `AvnAnchor::ChainHandlers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Nonces` (r:1 w:1)
	/// Proof: `AvnAnchor::Nonces` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::NextCheckpointId` (r:1 w:1)
	/// Proof: `AvnAnchor::NextCheckpointId` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::CheckpointFee` (r:1 w:0)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `TokenManager::AVTTokenContract` (r:1 w:0)
	/// Proof: `TokenManager::AVTTokenContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AvnAnchor::Checkpoints` (r:0 w:1)
	/// Proof: `AvnAnchor::Checkpoints` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn signed_submit_checkpoint_with_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `614`
		//  Estimated: `6196`
		// Minimum execution time: 236_483_000 picoseconds.
		Weight::from_parts(238_713_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `AvnAnchor::CheckpointFee` (r:0 w:1)
	/// Proof: `AvnAnchor::CheckpointFee` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_checkpoint_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 9_960_000 picoseconds.
		Weight::from_parts(10_250_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
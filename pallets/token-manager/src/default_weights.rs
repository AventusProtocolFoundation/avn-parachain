// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_token_manager
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-12-08, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-4-12`, CPU: `AMD EPYC 7R32`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --template
// .maintain/frame-weight-template.hbs
// --pallet
// pallet_token-manager
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// token_manager_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_token_manager.
pub trait WeightInfo {
	fn proxy_with_non_avt_token() -> Weight;
	fn signed_transfer() -> Weight;
	fn lower_avt_token() -> Weight;
	fn lower_non_avt_token() -> Weight;
	fn signed_lower_avt_token() -> Weight;
	fn signed_lower_non_avt_token() -> Weight;
	fn transfer_from_treasury() -> Weight;
}

/// Weights for pallet_token_manager using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:2 w:2)
	fn proxy_with_non_avt_token() -> Weight {
		Weight::from_ref_time(121_496_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:2 w:2)
	fn signed_transfer() -> Weight {
		Weight::from_ref_time(112_427_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: TokenManager Nonces (r:1 w:1)
	fn lower_avt_token() -> Weight {
		Weight::from_ref_time(45_483_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:1 w:1)
	// Storage: TokenManager Nonces (r:1 w:1)
	fn lower_non_avt_token() -> Weight {
		Weight::from_ref_time(33_882_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	fn signed_lower_avt_token() -> Weight {
		Weight::from_ref_time(120_897_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:1 w:1)
	fn signed_lower_non_avt_token() -> Weight {
		Weight::from_ref_time(110_426_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: System Account (r:2 w:2)
	fn transfer_from_treasury() -> Weight {
		Weight::from_ref_time(44_672_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:2 w:2)
	fn proxy_with_non_avt_token() -> Weight {
		Weight::from_ref_time(121_496_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:2 w:2)
	fn signed_transfer() -> Weight {
		Weight::from_ref_time(112_427_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: TokenManager Nonces (r:1 w:1)
	fn lower_avt_token() -> Weight {
		Weight::from_ref_time(45_483_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:1 w:1)
	// Storage: TokenManager Nonces (r:1 w:1)
	fn lower_non_avt_token() -> Weight {
		Weight::from_ref_time(33_882_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	fn signed_lower_avt_token() -> Weight {
		Weight::from_ref_time(120_897_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: TokenManager Nonces (r:1 w:1)
	// Storage: TokenManager LowerAccountId (r:1 w:0)
	// Storage: TokenManager AVTTokenContract (r:1 w:0)
	// Storage: TokenManager Balances (r:1 w:1)
	fn signed_lower_non_avt_token() -> Weight {
		Weight::from_ref_time(110_426_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: System Account (r:2 w:2)
	fn transfer_from_treasury() -> Weight {
		Weight::from_ref_time(44_672_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
}

//! Autogenerated weights for pallet_parachain_staking
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-02-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-16-102`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// frame-weight-template.hbs
// --pallet
// pallet_parachain_staking
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// parachain_staking_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_parachain_staking.
pub trait WeightInfo {
	fn set_total_selected() -> Weight;
	fn set_blocks_per_era() -> Weight;
	fn join_candidates(x: u32, ) -> Weight;
	fn schedule_leave_candidates(x: u32, ) -> Weight;
	fn execute_leave_candidates(x: u32, ) -> Weight;
	fn cancel_leave_candidates(x: u32, ) -> Weight;
	fn go_offline() -> Weight;
	fn go_online() -> Weight;
	fn candidate_bond_extra() -> Weight;
	fn signed_candidate_bond_extra() -> Weight;
	fn schedule_candidate_unbond() -> Weight;
	fn signed_schedule_candidate_unbond() -> Weight;
	fn execute_candidate_unbond() -> Weight;
	fn signed_execute_candidate_unbond() -> Weight;
	fn cancel_candidate_unbond() -> Weight;
	fn nominate(x: u32, y: u32, ) -> Weight;
	fn signed_nominate(x: u32, y: u32, ) -> Weight;
	fn schedule_leave_nominators() -> Weight;
	fn signed_schedule_leave_nominators() -> Weight;
	fn execute_leave_nominators(x: u32, ) -> Weight;
	fn signed_execute_leave_nominators(x: u32, ) -> Weight;
	fn cancel_leave_nominators() -> Weight;
	fn schedule_revoke_nomination() -> Weight;
	fn signed_schedule_revoke_nomination() -> Weight;
	fn bond_extra() -> Weight;
	fn signed_bond_extra() -> Weight;
	fn schedule_nominator_unbond() -> Weight;
	fn signed_schedule_nominator_unbond() -> Weight;
	fn execute_revoke_nomination() -> Weight;
	fn execute_nominator_unbond() -> Weight;
	fn signed_execute_nominator_unbond() -> Weight;
	fn cancel_revoke_nomination() -> Weight;
	fn cancel_nominator_unbond() -> Weight;
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight;
	fn pay_one_collator_reward(y: u32, ) -> Weight;
	fn base_on_initialize() -> Weight;
	fn select_top_candidates() -> Weight;
	fn note_author() -> Weight;
	fn set_admin_setting() -> Weight;
}

/// Weights for pallet_parachain_staking using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:1)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn set_total_selected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 16_629_000 picoseconds.
		Weight::from_parts(16_918_000, 1497)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_blocks_per_era() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 17_149_000 picoseconds.
		Weight::from_parts(17_709_000, 1497)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:0)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Session::NextKeys` (r:1 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn join_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2009 + x * (61 ±0)`
		//  Estimated: `17971 + x * (64 ±0)`
		// Minimum execution time: 78_408_000 picoseconds.
		Weight::from_parts(84_283_896, 17971)
			// Standard Error: 3_756
			.saturating_add(Weight::from_parts(280_392, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 32_406_000 picoseconds.
		Weight::from_parts(38_547_356, 6287)
			// Standard Error: 4_984
			.saturating_add(Weight::from_parts(140_575, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:349 w:349)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:350 w:350)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:350 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:350 w:350)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 350]`.
	fn execute_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7942 + x * (476 ±0)`
		//  Estimated: `17971 + x * (16837 ±0)`
		// Minimum execution time: 126_971_000 picoseconds.
		Weight::from_parts(49_679_349, 17971)
			// Standard Error: 25_218
			.saturating_add(Weight::from_parts(34_565_609, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16837).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 27_425_000 picoseconds.
		Weight::from_parts(31_916_566, 6287)
			// Standard Error: 3_559
			.saturating_add(Weight::from_parts(166_242, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_offline() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `6287`
		// Minimum execution time: 28_024_000 picoseconds.
		Weight::from_parts(28_535_000, 6287)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_online() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `6287`
		// Minimum execution time: 27_128_000 picoseconds.
		Weight::from_parts(27_790_000, 6287)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1053`
		//  Estimated: `6287`
		// Minimum execution time: 64_992_000 picoseconds.
		Weight::from_parts(66_371_000, 6287)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1138`
		//  Estimated: `6287`
		// Minimum execution time: 193_046_000 picoseconds.
		Weight::from_parts(196_066_000, 6287)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `667`
		//  Estimated: `3617`
		// Minimum execution time: 31_318_000 picoseconds.
		Weight::from_parts(32_044_000, 3617)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `752`
		//  Estimated: `3617`
		// Minimum execution time: 158_740_000 picoseconds.
		Weight::from_parts(159_907_000, 3617)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1155`
		//  Estimated: `6287`
		// Minimum execution time: 65_923_000 picoseconds.
		Weight::from_parts(66_917_000, 6287)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1240`
		//  Estimated: `6287`
		// Minimum execution time: 194_391_000 picoseconds.
		Weight::from_parts(196_728_000, 6287)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	fn cancel_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `587`
		//  Estimated: `3617`
		// Minimum execution time: 21_520_000 picoseconds.
		Weight::from_parts(21_786_000, 3617)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn nominate(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2542 + x * (104 ±0) + y * (50 ±0)`
		//  Estimated: `17971 + y * (5 ±0)`
		// Minimum execution time: 110_198_000 picoseconds.
		Weight::from_parts(94_138_717, 17971)
			// Standard Error: 3_865
			.saturating_add(Weight::from_parts(222_862, 0).saturating_mul(x.into()))
			// Standard Error: 1_268
			.saturating_add(Weight::from_parts(72_124, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:97 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn signed_nominate(x: u32, _y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1059 + x * (297 ±0) + y * (51 ±0)`
		//  Estimated: `17971 + x * (16307 ±8)`
		// Minimum execution time: 251_182_000 picoseconds.
		Weight::from_parts(253_721_000, 17971)
			// Standard Error: 37_972
			.saturating_add(Weight::from_parts(49_459_940, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16307).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_274_000 picoseconds.
		Weight::from_parts(32_753_000, 17971)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn signed_schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 159_446_000 picoseconds.
		Weight::from_parts(160_894_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±24)`
		// Minimum execution time: 94_024_000 picoseconds.
		Weight::from_parts(94_702_000, 17971)
			// Standard Error: 54_582
			.saturating_add(Weight::from_parts(24_211_285, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn signed_execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `55 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±11)`
		// Minimum execution time: 225_434_000 picoseconds.
		Weight::from_parts(103_585_688, 17971)
			// Standard Error: 29_390
			.saturating_add(Weight::from_parts(26_735_953, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(9_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 30_446_000 picoseconds.
		Weight::from_parts(31_053_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_025_000 picoseconds.
		Weight::from_parts(32_772_000, 17971)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 159_577_000 picoseconds.
		Weight::from_parts(160_953_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1488`
		//  Estimated: `17971`
		// Minimum execution time: 83_380_000 picoseconds.
		Weight::from_parts(84_692_000, 17971)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1533`
		//  Estimated: `17971`
		// Minimum execution time: 219_250_000 picoseconds.
		Weight::from_parts(220_905_000, 17971)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `641`
		//  Estimated: `17971`
		// Minimum execution time: 34_136_000 picoseconds.
		Weight::from_parts(34_848_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696`
		//  Estimated: `17971`
		// Minimum execution time: 164_087_000 picoseconds.
		Weight::from_parts(166_414_000, 17971)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1679`
		//  Estimated: `17971`
		// Minimum execution time: 98_688_000 picoseconds.
		Weight::from_parts(99_629_000, 17971)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1682`
		//  Estimated: `17971`
		// Minimum execution time: 88_737_000 picoseconds.
		Weight::from_parts(89_934_000, 17971)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1686`
		//  Estimated: `17971`
		// Minimum execution time: 222_309_000 picoseconds.
		Weight::from_parts(225_342_000, 17971)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 27_563_000 picoseconds.
		Weight::from_parts(28_514_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `785`
		//  Estimated: `17971`
		// Minimum execution time: 29_025_000 picoseconds.
		Weight::from_parts(29_641_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Staked` (r:1 w:2)
	/// Proof: `ParachainStaking::Staked` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:21 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::GrowthPeriod` (r:1 w:0)
	/// Proof: `ParachainStaking::GrowthPeriod` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Growth` (r:1 w:1)
	/// Proof: `ParachainStaking::Growth` (`max_values`: None, `max_size`: Some(360061), added: 362536, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:22 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:22 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:22 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:0)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:23)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::DelayedPayouts` (r:0 w:1)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[8, 20]`.
	/// The range of component `y` is `[0, 30000]`.
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `57085 + x * (14812 ±0)`
		//  Estimated: `363526 + x * (16933 ±0) + y * (17 ±0)`
		// Minimum execution time: 574_635_000 picoseconds.
		Weight::from_parts(1_921_360_625, 363526)
			// Standard Error: 25_135_240
			.saturating_add(Weight::from_parts(236_048_908, 0).saturating_mul(x.into()))
			// Standard Error: 10_598
			.saturating_add(Weight::from_parts(273_574, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(67_u64))
			.saturating_add(T::DbWeight::get().reads((9_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(60_u64))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16933).saturating_mul(x.into()))
			.saturating_add(Weight::from_parts(0, 17).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::DelayedPayouts` (r:1 w:0)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:2 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:1)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `y` is `[0, 300]`.
	fn pay_one_collator_reward(y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1078 + y * (183 ±0)`
		//  Estimated: `17951 + y * (2603 ±0)`
		// Minimum execution time: 81_202_000 picoseconds.
		Weight::from_parts(72_436_458, 17951)
			// Standard Error: 7_903
			.saturating_add(Weight::from_parts(40_079_043, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(y.into())))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(y.into())))
			.saturating_add(Weight::from_parts(0, 2603).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn base_on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `401`
		//  Estimated: `1497`
		// Minimum execution time: 6_681_000 picoseconds.
		Weight::from_parts(7_011_000, 1497)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:20 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:20 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:20 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:0 w:20)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	fn select_top_candidates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15540`
		//  Estimated: `339650`
		// Minimum execution time: 361_771_000 picoseconds.
		Weight::from_parts(367_409_000, 339650)
			.saturating_add(T::DbWeight::get().reads(63_u64))
			.saturating_add(T::DbWeight::get().writes(21_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:1 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:1)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn note_author() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `368`
		//  Estimated: `3521`
		// Minimum execution time: 15_223_000 picoseconds.
		Weight::from_parts(15_526_000, 3521)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Delay` (r:0 w:1)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_admin_setting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_492_000 picoseconds.
		Weight::from_parts(8_898_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:1)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn set_total_selected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 16_629_000 picoseconds.
		Weight::from_parts(16_918_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_blocks_per_era() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 17_149_000 picoseconds.
		Weight::from_parts(17_709_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:0)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Session::NextKeys` (r:1 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn join_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2009 + x * (61 ±0)`
		//  Estimated: `17971 + x * (64 ±0)`
		// Minimum execution time: 78_408_000 picoseconds.
		Weight::from_parts(84_283_896, 17971)
			// Standard Error: 3_756
			.saturating_add(Weight::from_parts(280_392, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 32_406_000 picoseconds.
		Weight::from_parts(38_547_356, 6287)
			// Standard Error: 4_984
			.saturating_add(Weight::from_parts(140_575, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:349 w:349)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:350 w:350)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:350 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:350 w:350)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 350]`.
	fn execute_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7942 + x * (476 ±0)`
		//  Estimated: `17971 + x * (16837 ±0)`
		// Minimum execution time: 126_971_000 picoseconds.
		Weight::from_parts(49_679_349, 17971)
			// Standard Error: 25_218
			.saturating_add(Weight::from_parts(34_565_609, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().reads((4_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16837).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 27_425_000 picoseconds.
		Weight::from_parts(31_916_566, 6287)
			// Standard Error: 3_559
			.saturating_add(Weight::from_parts(166_242, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_offline() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `6287`
		// Minimum execution time: 28_024_000 picoseconds.
		Weight::from_parts(28_535_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_online() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `6287`
		// Minimum execution time: 27_128_000 picoseconds.
		Weight::from_parts(27_790_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1053`
		//  Estimated: `6287`
		// Minimum execution time: 64_992_000 picoseconds.
		Weight::from_parts(66_371_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1138`
		//  Estimated: `6287`
		// Minimum execution time: 193_046_000 picoseconds.
		Weight::from_parts(196_066_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `667`
		//  Estimated: `3617`
		// Minimum execution time: 31_318_000 picoseconds.
		Weight::from_parts(32_044_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `752`
		//  Estimated: `3617`
		// Minimum execution time: 158_740_000 picoseconds.
		Weight::from_parts(159_907_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1155`
		//  Estimated: `6287`
		// Minimum execution time: 65_923_000 picoseconds.
		Weight::from_parts(66_917_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1240`
		//  Estimated: `6287`
		// Minimum execution time: 194_391_000 picoseconds.
		Weight::from_parts(196_728_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	fn cancel_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `587`
		//  Estimated: `3617`
		// Minimum execution time: 21_520_000 picoseconds.
		Weight::from_parts(21_786_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn nominate(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2542 + x * (104 ±0) + y * (50 ±0)`
		//  Estimated: `17971 + y * (5 ±0)`
		// Minimum execution time: 110_198_000 picoseconds.
		Weight::from_parts(94_138_717, 17971)
			// Standard Error: 3_865
			.saturating_add(Weight::from_parts(222_862, 0).saturating_mul(x.into()))
			// Standard Error: 1_268
			.saturating_add(Weight::from_parts(72_124, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:97 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn signed_nominate(x: u32, _y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1059 + x * (297 ±0) + y * (51 ±0)`
		//  Estimated: `17971 + x * (16307 ±8)`
		// Minimum execution time: 251_182_000 picoseconds.
		Weight::from_parts(253_721_000, 17971)
			// Standard Error: 37_972
			.saturating_add(Weight::from_parts(49_459_940, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16307).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_274_000 picoseconds.
		Weight::from_parts(32_753_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn signed_schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 159_446_000 picoseconds.
		Weight::from_parts(160_894_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±24)`
		// Minimum execution time: 94_024_000 picoseconds.
		Weight::from_parts(94_702_000, 17971)
			// Standard Error: 54_582
			.saturating_add(Weight::from_parts(24_211_285, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn signed_execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `55 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±11)`
		// Minimum execution time: 225_434_000 picoseconds.
		Weight::from_parts(103_585_688, 17971)
			// Standard Error: 29_390
			.saturating_add(Weight::from_parts(26_735_953, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 30_446_000 picoseconds.
		Weight::from_parts(31_053_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_025_000 picoseconds.
		Weight::from_parts(32_772_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 159_577_000 picoseconds.
		Weight::from_parts(160_953_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1488`
		//  Estimated: `17971`
		// Minimum execution time: 83_380_000 picoseconds.
		Weight::from_parts(84_692_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1533`
		//  Estimated: `17971`
		// Minimum execution time: 219_250_000 picoseconds.
		Weight::from_parts(220_905_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `641`
		//  Estimated: `17971`
		// Minimum execution time: 34_136_000 picoseconds.
		Weight::from_parts(34_848_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696`
		//  Estimated: `17971`
		// Minimum execution time: 164_087_000 picoseconds.
		Weight::from_parts(166_414_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1679`
		//  Estimated: `17971`
		// Minimum execution time: 98_688_000 picoseconds.
		Weight::from_parts(99_629_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1682`
		//  Estimated: `17971`
		// Minimum execution time: 88_737_000 picoseconds.
		Weight::from_parts(89_934_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1686`
		//  Estimated: `17971`
		// Minimum execution time: 222_309_000 picoseconds.
		Weight::from_parts(225_342_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 27_563_000 picoseconds.
		Weight::from_parts(28_514_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `785`
		//  Estimated: `17971`
		// Minimum execution time: 29_025_000 picoseconds.
		Weight::from_parts(29_641_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Staked` (r:1 w:2)
	/// Proof: `ParachainStaking::Staked` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:21 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::GrowthPeriod` (r:1 w:0)
	/// Proof: `ParachainStaking::GrowthPeriod` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Growth` (r:1 w:1)
	/// Proof: `ParachainStaking::Growth` (`max_values`: None, `max_size`: Some(360061), added: 362536, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:22 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:22 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:22 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:0)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:23)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::DelayedPayouts` (r:0 w:1)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[8, 20]`.
	/// The range of component `y` is `[0, 30000]`.
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `57085 + x * (14812 ±0)`
		//  Estimated: `363526 + x * (16933 ±0) + y * (17 ±0)`
		// Minimum execution time: 574_635_000 picoseconds.
		Weight::from_parts(1_921_360_625, 363526)
			// Standard Error: 25_135_240
			.saturating_add(Weight::from_parts(236_048_908, 0).saturating_mul(x.into()))
			// Standard Error: 10_598
			.saturating_add(Weight::from_parts(273_574, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(67_u64))
			.saturating_add(RocksDbWeight::get().reads((9_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(60_u64))
			.saturating_add(RocksDbWeight::get().writes((6_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16933).saturating_mul(x.into()))
			.saturating_add(Weight::from_parts(0, 17).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::DelayedPayouts` (r:1 w:0)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:2 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:1)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `y` is `[0, 300]`.
	fn pay_one_collator_reward(y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1078 + y * (183 ±0)`
		//  Estimated: `17951 + y * (2603 ±0)`
		// Minimum execution time: 81_202_000 picoseconds.
		Weight::from_parts(72_436_458, 17951)
			// Standard Error: 7_903
			.saturating_add(Weight::from_parts(40_079_043, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(y.into())))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(y.into())))
			.saturating_add(Weight::from_parts(0, 2603).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn base_on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `401`
		//  Estimated: `1497`
		// Minimum execution time: 6_681_000 picoseconds.
		Weight::from_parts(7_011_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:20 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:20 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:20 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:0 w:20)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	fn select_top_candidates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15540`
		//  Estimated: `339650`
		// Minimum execution time: 361_771_000 picoseconds.
		Weight::from_parts(367_409_000, 339650)
			.saturating_add(RocksDbWeight::get().reads(63_u64))
			.saturating_add(RocksDbWeight::get().writes(21_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:1 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:1)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn note_author() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `368`
		//  Estimated: `3521`
		// Minimum execution time: 15_223_000 picoseconds.
		Weight::from_parts(15_526_000, 3521)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Delay` (r:0 w:1)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_admin_setting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_492_000 picoseconds.
		Weight::from_parts(8_898_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
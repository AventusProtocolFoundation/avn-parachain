
//! Autogenerated weights for pallet_parachain_staking
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2025-04-01, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-2-182`, CPU: `AMD EPYC 7R32`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// frame-weight-template.hbs
// --pallet
// pallet_parachain_staking
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// parachain_staking_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_parachain_staking.
pub trait WeightInfo {
	fn set_total_selected() -> Weight;
	fn set_blocks_per_era() -> Weight;
	fn join_candidates(x: u32, ) -> Weight;
	fn schedule_leave_candidates(x: u32, ) -> Weight;
	fn execute_leave_candidates(x: u32, ) -> Weight;
	fn cancel_leave_candidates(x: u32, ) -> Weight;
	fn go_offline() -> Weight;
	fn go_online() -> Weight;
	fn candidate_bond_extra() -> Weight;
	fn signed_candidate_bond_extra() -> Weight;
	fn schedule_candidate_unbond() -> Weight;
	fn signed_schedule_candidate_unbond() -> Weight;
	fn execute_candidate_unbond() -> Weight;
	fn signed_execute_candidate_unbond() -> Weight;
	fn cancel_candidate_unbond() -> Weight;
	fn nominate(x: u32, y: u32, ) -> Weight;
	fn signed_nominate(x: u32, y: u32, ) -> Weight;
	fn schedule_leave_nominators() -> Weight;
	fn signed_schedule_leave_nominators() -> Weight;
	fn execute_leave_nominators(x: u32, ) -> Weight;
	fn signed_execute_leave_nominators(x: u32, ) -> Weight;
	fn cancel_leave_nominators() -> Weight;
	fn schedule_revoke_nomination() -> Weight;
	fn signed_schedule_revoke_nomination() -> Weight;
	fn bond_extra() -> Weight;
	fn signed_bond_extra() -> Weight;
	fn schedule_nominator_unbond() -> Weight;
	fn signed_schedule_nominator_unbond() -> Weight;
	fn execute_revoke_nomination() -> Weight;
	fn execute_nominator_unbond() -> Weight;
	fn signed_execute_nominator_unbond() -> Weight;
	fn cancel_revoke_nomination() -> Weight;
	fn cancel_nominator_unbond() -> Weight;
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight;
	fn pay_one_collator_reward(y: u32, ) -> Weight;
	fn base_on_initialize() -> Weight;
	fn select_top_candidates() -> Weight;
	fn note_author() -> Weight;
	fn set_admin_setting() -> Weight;
}

/// Weights for pallet_parachain_staking using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:1)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn set_total_selected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 18_050_000 picoseconds.
		Weight::from_parts(19_170_000, 1497)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_blocks_per_era() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 17_981_000 picoseconds.
		Weight::from_parts(18_521_000, 1497)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:0)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Session::NextKeys` (r:1 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn join_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2009 + x * (61 ±0)`
		//  Estimated: `17971 + x * (64 ±0)`
		// Minimum execution time: 82_762_000 picoseconds.
		Weight::from_parts(93_182_657, 17971)
			// Standard Error: 11_227
			.saturating_add(Weight::from_parts(212_534, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 34_691_000 picoseconds.
		Weight::from_parts(41_205_636, 6287)
			// Standard Error: 7_551
			.saturating_add(Weight::from_parts(118_521, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:349 w:349)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:350 w:350)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:350 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:350 w:350)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 350]`.
	fn execute_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7980 + x * (476 ±0)`
		//  Estimated: `17971 + x * (16837 ±0)`
		// Minimum execution time: 139_133_000 picoseconds.
		Weight::from_parts(55_697_684, 17971)
			// Standard Error: 60_478
			.saturating_add(Weight::from_parts(38_027_760, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16837).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 27_710_000 picoseconds.
		Weight::from_parts(35_782_241, 6287)
			// Standard Error: 7_575
			.saturating_add(Weight::from_parts(111_238, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_offline() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `6287`
		// Minimum execution time: 28_131_000 picoseconds.
		Weight::from_parts(28_651_000, 6287)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_online() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `6287`
		// Minimum execution time: 27_931_000 picoseconds.
		Weight::from_parts(28_431_000, 6287)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1053`
		//  Estimated: `6287`
		// Minimum execution time: 66_802_000 picoseconds.
		Weight::from_parts(67_441_000, 6287)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1138`
		//  Estimated: `6287`
		// Minimum execution time: 213_306_000 picoseconds.
		Weight::from_parts(217_666_000, 6287)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `667`
		//  Estimated: `3617`
		// Minimum execution time: 31_891_000 picoseconds.
		Weight::from_parts(43_801_000, 3617)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `752`
		//  Estimated: `3617`
		// Minimum execution time: 179_765_000 picoseconds.
		Weight::from_parts(183_724_000, 3617)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1155`
		//  Estimated: `6287`
		// Minimum execution time: 65_382_000 picoseconds.
		Weight::from_parts(66_381_000, 6287)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1243`
		//  Estimated: `6287`
		// Minimum execution time: 216_725_000 picoseconds.
		Weight::from_parts(223_826_000, 6287)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	fn cancel_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `587`
		//  Estimated: `3617`
		// Minimum execution time: 21_820_000 picoseconds.
		Weight::from_parts(22_181_000, 3617)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn nominate(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2542 + x * (104 ±0) + y * (50 ±0)`
		//  Estimated: `17971 + y * (5 ±0)`
		// Minimum execution time: 106_083_000 picoseconds.
		Weight::from_parts(112_094_917, 17971)
			// Standard Error: 14_730
			.saturating_add(Weight::from_parts(154_723, 0).saturating_mul(x.into()))
			// Standard Error: 4_832
			.saturating_add(Weight::from_parts(52_347, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:97 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn signed_nominate(x: u32, _y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1011 + x * (298 ±0) + y * (51 ±0)`
		//  Estimated: `17971 + x * (16307 ±8)`
		// Minimum execution time: 270_147_000 picoseconds.
		Weight::from_parts(284_057_000, 17971)
			// Standard Error: 54_484
			.saturating_add(Weight::from_parts(54_664_800, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16307).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_201_000 picoseconds.
		Weight::from_parts(32_711_000, 17971)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn signed_schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 189_505_000 picoseconds.
		Weight::from_parts(197_715_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±24)`
		// Minimum execution time: 96_732_000 picoseconds.
		Weight::from_parts(97_302_000, 17971)
			// Standard Error: 60_320
			.saturating_add(Weight::from_parts(26_558_162, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn signed_execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `59 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±11)`
		// Minimum execution time: 246_936_000 picoseconds.
		Weight::from_parts(117_957_325, 17971)
			// Standard Error: 55_534
			.saturating_add(Weight::from_parts(29_277_126, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(9_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 31_211_000 picoseconds.
		Weight::from_parts(33_141_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_331_000 picoseconds.
		Weight::from_parts(32_711_000, 17971)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 179_865_000 picoseconds.
		Weight::from_parts(184_685_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1488`
		//  Estimated: `17971`
		// Minimum execution time: 86_182_000 picoseconds.
		Weight::from_parts(87_482_000, 17971)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1532`
		//  Estimated: `17971`
		// Minimum execution time: 240_246_000 picoseconds.
		Weight::from_parts(242_756_000, 17971)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `641`
		//  Estimated: `17971`
		// Minimum execution time: 34_991_000 picoseconds.
		Weight::from_parts(35_661_000, 17971)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696`
		//  Estimated: `17971`
		// Minimum execution time: 185_495_000 picoseconds.
		Weight::from_parts(191_405_000, 17971)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1679`
		//  Estimated: `17971`
		// Minimum execution time: 98_732_000 picoseconds.
		Weight::from_parts(100_583_000, 17971)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1682`
		//  Estimated: `17971`
		// Minimum execution time: 88_812_000 picoseconds.
		Weight::from_parts(90_182_000, 17971)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1683`
		//  Estimated: `17971`
		// Minimum execution time: 242_686_000 picoseconds.
		Weight::from_parts(253_356_000, 17971)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 27_730_000 picoseconds.
		Weight::from_parts(28_190_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `785`
		//  Estimated: `17971`
		// Minimum execution time: 27_531_000 picoseconds.
		Weight::from_parts(28_181_000, 17971)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Staked` (r:1 w:2)
	/// Proof: `ParachainStaking::Staked` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:21 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::GrowthPeriod` (r:1 w:0)
	/// Proof: `ParachainStaking::GrowthPeriod` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Growth` (r:1 w:1)
	/// Proof: `ParachainStaking::Growth` (`max_values`: None, `max_size`: Some(360061), added: 362536, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:22 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:22 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:22 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:0)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:23)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::DelayedPayouts` (r:0 w:1)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[8, 20]`.
	/// The range of component `y` is `[0, 30000]`.
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `57123 + x * (14812 ±0)`
		//  Estimated: `363526 + x * (16933 ±1_554) + y * (17 ±0)`
		// Minimum execution time: 597_375_000 picoseconds.
		Weight::from_parts(2_138_321_428, 363526)
			// Standard Error: 28_247_440
			.saturating_add(Weight::from_parts(261_505_172, 0).saturating_mul(x.into()))
			// Standard Error: 11_911
			.saturating_add(Weight::from_parts(315_204, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(67_u64))
			.saturating_add(T::DbWeight::get().reads((9_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(60_u64))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16933).saturating_mul(x.into()))
			.saturating_add(Weight::from_parts(0, 17).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::DelayedPayouts` (r:1 w:0)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:2 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:1)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `y` is `[0, 300]`.
	fn pay_one_collator_reward(y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1114 + y * (183 ±0)`
		//  Estimated: `17951 + y * (2603 ±0)`
		// Minimum execution time: 84_962_000 picoseconds.
		Weight::from_parts(57_106_316, 17951)
			// Standard Error: 29_021
			.saturating_add(Weight::from_parts(46_337_438, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(y.into())))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(y.into())))
			.saturating_add(Weight::from_parts(0, 2603).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn base_on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `401`
		//  Estimated: `1497`
		// Minimum execution time: 7_080_000 picoseconds.
		Weight::from_parts(7_510_000, 1497)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:20 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:20 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:20 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:0 w:20)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	fn select_top_candidates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15540`
		//  Estimated: `339650`
		// Minimum execution time: 374_209_000 picoseconds.
		Weight::from_parts(392_959_000, 339650)
			.saturating_add(T::DbWeight::get().reads(63_u64))
			.saturating_add(T::DbWeight::get().writes(21_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:1 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:1)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn note_author() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `368`
		//  Estimated: `3521`
		// Minimum execution time: 15_701_000 picoseconds.
		Weight::from_parts(15_890_000, 3521)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Delay` (r:0 w:1)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_admin_setting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_940_000 picoseconds.
		Weight::from_parts(9_231_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:1)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn set_total_selected() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 18_050_000 picoseconds.
		Weight::from_parts(19_170_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_blocks_per_era() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `1497`
		// Minimum execution time: 17_981_000 picoseconds.
		Weight::from_parts(18_521_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:0)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Session::NextKeys` (r:1 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:0 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn join_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2009 + x * (61 ±0)`
		//  Estimated: `17971 + x * (64 ±0)`
		// Minimum execution time: 82_762_000 picoseconds.
		Weight::from_parts(93_182_657, 17971)
			// Standard Error: 11_227
			.saturating_add(Weight::from_parts(212_534, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 34_691_000 picoseconds.
		Weight::from_parts(41_205_636, 6287)
			// Standard Error: 7_551
			.saturating_add(Weight::from_parts(118_521, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:349 w:349)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:350 w:350)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:350 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:350 w:350)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::BottomNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::BottomNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 350]`.
	fn execute_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7980 + x * (476 ±0)`
		//  Estimated: `17971 + x * (16837 ±0)`
		// Minimum execution time: 139_133_000 picoseconds.
		Weight::from_parts(55_697_684, 17971)
			// Standard Error: 60_478
			.saturating_add(Weight::from_parts(38_027_760, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().reads((4_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16837).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 97]`.
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947 + x * (51 ±0)`
		//  Estimated: `6287`
		// Minimum execution time: 27_710_000 picoseconds.
		Weight::from_parts(35_782_241, 6287)
			// Standard Error: 7_575
			.saturating_add(Weight::from_parts(111_238, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_offline() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `6287`
		// Minimum execution time: 28_131_000 picoseconds.
		Weight::from_parts(28_651_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn go_online() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `6287`
		// Minimum execution time: 27_931_000 picoseconds.
		Weight::from_parts(28_431_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1053`
		//  Estimated: `6287`
		// Minimum execution time: 66_802_000 picoseconds.
		Weight::from_parts(67_441_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_candidate_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1138`
		//  Estimated: `6287`
		// Minimum execution time: 213_306_000 picoseconds.
		Weight::from_parts(217_666_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `667`
		//  Estimated: `3617`
		// Minimum execution time: 31_891_000 picoseconds.
		Weight::from_parts(43_801_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `752`
		//  Estimated: `3617`
		// Minimum execution time: 179_765_000 picoseconds.
		Weight::from_parts(183_724_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1155`
		//  Estimated: `6287`
		// Minimum execution time: 65_382_000 picoseconds.
		Weight::from_parts(66_381_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	fn signed_execute_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1243`
		//  Estimated: `6287`
		// Minimum execution time: 216_725_000 picoseconds.
		Weight::from_parts(223_826_000, 6287)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	fn cancel_candidate_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `587`
		//  Estimated: `3617`
		// Minimum execution time: 21_820_000 picoseconds.
		Weight::from_parts(22_181_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn nominate(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2542 + x * (104 ±0) + y * (50 ±0)`
		//  Estimated: `17971 + y * (5 ±0)`
		// Minimum execution time: 106_083_000 picoseconds.
		Weight::from_parts(112_094_917, 17971)
			// Standard Error: 14_730
			.saturating_add(Weight::from_parts(154_723, 0).saturating_mul(x.into()))
			// Standard Error: 4_832
			.saturating_add(Weight::from_parts(52_347, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(Weight::from_parts(0, 5).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:97 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[3, 100]`.
	/// The range of component `y` is `[2, 300]`.
	fn signed_nominate(x: u32, _y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1011 + x * (298 ±0) + y * (51 ±0)`
		//  Estimated: `17971 + x * (16307 ±8)`
		// Minimum execution time: 270_147_000 picoseconds.
		Weight::from_parts(284_057_000, 17971)
			// Standard Error: 54_484
			.saturating_add(Weight::from_parts(54_664_800, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16307).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_201_000 picoseconds.
		Weight::from_parts(32_711_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn signed_schedule_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 189_505_000 picoseconds.
		Weight::from_parts(197_715_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±24)`
		// Minimum execution time: 96_732_000 picoseconds.
		Weight::from_parts(97_302_000, 17971)
			// Standard Error: 60_320
			.saturating_add(Weight::from_parts(26_558_162, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:96 w:96)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:96 w:96)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:96 w:96)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[2, 100]`.
	fn signed_execute_leave_nominators(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `59 + x * (461 ±0)`
		//  Estimated: `17971 + x * (15918 ±11)`
		// Minimum execution time: 246_936_000 picoseconds.
		Weight::from_parts(117_957_325, 17971)
			// Standard Error: 55_534
			.saturating_add(Weight::from_parts(29_277_126, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 15918).saturating_mul(x.into()))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_leave_nominators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 31_211_000 picoseconds.
		Weight::from_parts(33_141_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `17971`
		// Minimum execution time: 32_331_000 picoseconds.
		Weight::from_parts(32_711_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `693`
		//  Estimated: `17971`
		// Minimum execution time: 179_865_000 picoseconds.
		Weight::from_parts(184_685_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1488`
		//  Estimated: `17971`
		// Minimum execution time: 86_182_000 picoseconds.
		Weight::from_parts(87_482_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1532`
		//  Estimated: `17971`
		// Minimum execution time: 240_246_000 picoseconds.
		Weight::from_parts(242_756_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `641`
		//  Estimated: `17971`
		// Minimum execution time: 34_991_000 picoseconds.
		Weight::from_parts(35_661_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Delay` (r:1 w:0)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn signed_schedule_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696`
		//  Estimated: `17971`
		// Minimum execution time: 185_495_000 picoseconds.
		Weight::from_parts(191_405_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1679`
		//  Estimated: `17971`
		// Minimum execution time: 98_732_000 picoseconds.
		Weight::from_parts(100_583_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1682`
		//  Estimated: `17971`
		// Minimum execution time: 88_812_000 picoseconds.
		Weight::from_parts(90_182_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `ParachainStaking::ProxyNonces` (r:1 w:1)
	/// Proof: `ParachainStaking::ProxyNonces` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinTotalNominatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinTotalNominatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:1)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:0)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:1 w:1)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:1)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:1)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn signed_execute_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1683`
		//  Estimated: `17971`
		// Minimum execution time: 242_686_000 picoseconds.
		Weight::from_parts(253_356_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_revoke_nomination() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `691`
		//  Estimated: `17971`
		// Minimum execution time: 27_730_000 picoseconds.
		Weight::from_parts(28_190_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::NominatorState` (r:1 w:1)
	/// Proof: `ParachainStaking::NominatorState` (`max_values`: None, `max_size`: Some(14506), added: 16981, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:1 w:1)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	fn cancel_nominator_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `785`
		//  Estimated: `17971`
		// Minimum execution time: 27_531_000 picoseconds.
		Weight::from_parts(28_181_000, 17971)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:1)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Staked` (r:1 w:2)
	/// Proof: `ParachainStaking::Staked` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:21 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::GrowthPeriod` (r:1 w:0)
	/// Proof: `ParachainStaking::GrowthPeriod` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Growth` (r:1 w:1)
	/// Proof: `ParachainStaking::Growth` (`max_values`: None, `max_size`: Some(360061), added: 362536, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:22 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:22 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:22 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Total` (r:1 w:0)
	/// Proof: `ParachainStaking::Total` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:23)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::DelayedPayouts` (r:0 w:1)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[8, 20]`.
	/// The range of component `y` is `[0, 30000]`.
	fn era_transition_on_initialize(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `57123 + x * (14812 ±0)`
		//  Estimated: `363526 + x * (16933 ±1_554) + y * (17 ±0)`
		// Minimum execution time: 597_375_000 picoseconds.
		Weight::from_parts(2_138_321_428, 363526)
			// Standard Error: 28_247_440
			.saturating_add(Weight::from_parts(261_505_172, 0).saturating_mul(x.into()))
			// Standard Error: 11_911
			.saturating_add(Weight::from_parts(315_204, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(67_u64))
			.saturating_add(RocksDbWeight::get().reads((9_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(60_u64))
			.saturating_add(RocksDbWeight::get().writes((6_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 16933).saturating_mul(x.into()))
			.saturating_add(Weight::from_parts(0, 17).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::DelayedPayouts` (r:1 w:0)
	/// Proof: `ParachainStaking::DelayedPayouts` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:0)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:2 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:1 w:1)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:302 w:302)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::LockedEraPayout` (r:1 w:1)
	/// Proof: `ParachainStaking::LockedEraPayout` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// The range of component `y` is `[0, 300]`.
	fn pay_one_collator_reward(y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1114 + y * (183 ±0)`
		//  Estimated: `17951 + y * (2603 ±0)`
		// Minimum execution time: 84_962_000 picoseconds.
		Weight::from_parts(57_106_316, 17951)
			// Standard Error: 29_021
			.saturating_add(Weight::from_parts(46_337_438, 0).saturating_mul(y.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(y.into())))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(y.into())))
			.saturating_add(Weight::from_parts(0, 2603).saturating_mul(y.into()))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	fn base_on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `401`
		//  Estimated: `1497`
		// Minimum execution time: 7_080_000 picoseconds.
		Weight::from_parts(7_510_000, 1497)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `ParachainStaking::CandidatePool` (r:1 w:0)
	/// Proof: `ParachainStaking::CandidatePool` (`max_values`: Some(1), `max_size`: Some(4802), added: 5297, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TotalSelected` (r:1 w:0)
	/// Proof: `ParachainStaking::TotalSelected` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::MinCollatorStake` (r:1 w:0)
	/// Proof: `ParachainStaking::MinCollatorStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::CandidateInfo` (r:20 w:0)
	/// Proof: `ParachainStaking::CandidateInfo` (`max_values`: None, `max_size`: Some(152), added: 2627, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::NominationScheduledRequests` (r:20 w:0)
	/// Proof: `ParachainStaking::NominationScheduledRequests` (`max_values`: None, `max_size`: Some(5350), added: 7825, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::TopNominations` (r:20 w:0)
	/// Proof: `ParachainStaking::TopNominations` (`max_values`: None, `max_size`: Some(14458), added: 16933, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::SelectedCandidates` (r:0 w:1)
	/// Proof: `ParachainStaking::SelectedCandidates` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AtStake` (r:0 w:20)
	/// Proof: `ParachainStaking::AtStake` (`max_values`: None, `max_size`: Some(14486), added: 16961, mode: `MaxEncodedLen`)
	fn select_top_candidates() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15540`
		//  Estimated: `339650`
		// Minimum execution time: 374_209_000 picoseconds.
		Weight::from_parts(392_959_000, 339650)
			.saturating_add(RocksDbWeight::get().reads(63_u64))
			.saturating_add(RocksDbWeight::get().writes(21_u64))
	}
	/// Storage: `ParachainStaking::Era` (r:1 w:0)
	/// Proof: `ParachainStaking::Era` (`max_values`: Some(1), `max_size`: Some(12), added: 507, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::AwardedPts` (r:1 w:1)
	/// Proof: `ParachainStaking::AwardedPts` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `ParachainStaking::Points` (r:1 w:1)
	/// Proof: `ParachainStaking::Points` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn note_author() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `368`
		//  Estimated: `3521`
		// Minimum execution time: 15_701_000 picoseconds.
		Weight::from_parts(15_890_000, 3521)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ParachainStaking::Delay` (r:0 w:1)
	/// Proof: `ParachainStaking::Delay` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_admin_setting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_940_000 picoseconds.
		Weight::from_parts(9_231_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
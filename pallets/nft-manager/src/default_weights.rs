
//! Autogenerated weights for pallet_nft_manager
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-02-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-16-102`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// frame-weight-template.hbs
// --pallet
// pallet_nft_manager
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// nft_manager_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_nft_manager.
pub trait WeightInfo {
	fn mint_single_nft(r: u32, ) -> Weight;
	fn signed_mint_single_nft(r: u32, ) -> Weight;
	fn list_nft_open_for_sale() -> Weight;
	fn signed_list_nft_open_for_sale() -> Weight;
	fn signed_transfer_fiat_nft() -> Weight;
	fn signed_cancel_list_fiat_nft() -> Weight;
	fn proxy_signed_mint_single_nft(r: u32, ) -> Weight;
	fn proxy_signed_list_nft_open_for_sale() -> Weight;
	fn proxy_signed_transfer_fiat_nft() -> Weight;
	fn proxy_signed_cancel_list_fiat_nft() -> Weight;
	fn proxy_signed_create_batch(r: u32, ) -> Weight;
	fn proxy_signed_mint_batch_nft() -> Weight;
	fn proxy_signed_list_batch_for_sale() -> Weight;
	fn proxy_signed_end_batch_sale() -> Weight;
}

/// Weights for pallet_nft_manager using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 33_506_000 picoseconds.
		Weight::from_parts(34_871_740, 4644)
			// Standard Error: 2_849
			.saturating_add(Weight::from_parts(98_142, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn signed_mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 153_027_000 picoseconds.
		Weight::from_parts(154_654_734, 4644)
			// Standard Error: 6_907
			.saturating_add(Weight::from_parts(426_223, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 24_821_000 picoseconds.
		Weight::from_parts(25_382_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn signed_list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 147_097_000 picoseconds.
		Weight::from_parts(148_435_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn signed_transfer_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 153_507_000 picoseconds.
		Weight::from_parts(155_621_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn signed_cancel_list_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 154_011_000 picoseconds.
		Weight::from_parts(155_600_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn proxy_signed_mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 165_558_000 picoseconds.
		Weight::from_parts(167_390_613, 4644)
			// Standard Error: 6_470
			.saturating_add(Weight::from_parts(533_796, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn proxy_signed_list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 157_876_000 picoseconds.
		Weight::from_parts(159_801_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_transfer_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 165_945_000 picoseconds.
		Weight::from_parts(167_731_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_cancel_list_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 165_881_000 picoseconds.
		Weight::from_parts(167_600_000, 4644)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchInfoId` (r:1 w:1)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16384]`.
	fn proxy_signed_create_batch(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `3545`
		// Minimum execution time: 171_109_000 picoseconds.
		Weight::from_parts(174_141_223, 3545)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:0)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftBatches` (r:1 w:1)
	/// Proof: `NftManager::NftBatches` (`max_values`: None, `max_size`: Some(524340), added: 526815, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_mint_batch_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `912`
		//  Estimated: `527805`
		// Minimum execution time: 192_266_000 picoseconds.
		Weight::from_parts(194_604_000, 527805)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftBatches` (r:1 w:0)
	/// Proof: `NftManager::NftBatches` (`max_values`: None, `max_size`: Some(524340), added: 526815, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn proxy_signed_list_batch_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882`
		//  Estimated: `527805`
		// Minimum execution time: 170_720_000 picoseconds.
		Weight::from_parts(172_792_000, 527805)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	fn proxy_signed_end_batch_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `956`
		//  Estimated: `4024`
		// Minimum execution time: 175_354_000 picoseconds.
		Weight::from_parts(177_440_000, 4024)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 33_506_000 picoseconds.
		Weight::from_parts(34_871_740, 4644)
			// Standard Error: 2_849
			.saturating_add(Weight::from_parts(98_142, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn signed_mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 153_027_000 picoseconds.
		Weight::from_parts(154_654_734, 4644)
			// Standard Error: 6_907
			.saturating_add(Weight::from_parts(426_223, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 24_821_000 picoseconds.
		Weight::from_parts(25_382_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn signed_list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 147_097_000 picoseconds.
		Weight::from_parts(148_435_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn signed_transfer_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 153_507_000 picoseconds.
		Weight::from_parts(155_621_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn signed_cancel_list_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 154_011_000 picoseconds.
		Weight::from_parts(155_600_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16]`.
	fn proxy_signed_mint_single_nft(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `4644`
		// Minimum execution time: 165_558_000 picoseconds.
		Weight::from_parts(167_390_613, 4644)
			// Standard Error: 6_470
			.saturating_add(Weight::from_parts(533_796, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn proxy_signed_list_nft_open_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321`
		//  Estimated: `4644`
		// Minimum execution time: 157_876_000 picoseconds.
		Weight::from_parts(159_801_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_transfer_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 165_945_000 picoseconds.
		Weight::from_parts(167_731_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::NftOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::NftOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_cancel_list_fiat_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `392`
		//  Estimated: `4644`
		// Minimum execution time: 165_881_000 picoseconds.
		Weight::from_parts(167_600_000, 4644)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextSingleNftUniqueId` (r:1 w:1)
	/// Proof: `NftManager::NextSingleNftUniqueId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchInfoId` (r:1 w:1)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NextInfoId` (r:1 w:1)
	/// Proof: `NftManager::NextInfoId` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:0 w:1)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[1, 16384]`.
	fn proxy_signed_create_batch(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `114`
		//  Estimated: `3545`
		// Minimum execution time: 171_109_000 picoseconds.
		Weight::from_parts(174_141_223, 3545)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:0)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftBatches` (r:1 w:1)
	/// Proof: `NftManager::NftBatches` (`max_values`: None, `max_size`: Some(524340), added: 526815, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::UsedExternalReferences` (r:1 w:1)
	/// Proof: `NftManager::UsedExternalReferences` (`max_values`: None, `max_size`: Some(1043), added: 3518, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::Nfts` (r:1 w:1)
	/// Proof: `NftManager::Nfts` (`max_values`: None, `max_size`: Some(1179), added: 3654, mode: `MaxEncodedLen`)
	fn proxy_signed_mint_batch_nft() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `912`
		//  Estimated: `527805`
		// Minimum execution time: 192_266_000 picoseconds.
		Weight::from_parts(194_604_000, 527805)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftBatches` (r:1 w:0)
	/// Proof: `NftManager::NftBatches` (`max_values`: None, `max_size`: Some(524340), added: 526815, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn proxy_signed_list_batch_for_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882`
		//  Estimated: `527805`
		// Minimum execution time: 170_720_000 picoseconds.
		Weight::from_parts(172_792_000, 527805)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `NftManager::BatchInfoId` (r:1 w:0)
	/// Proof: `NftManager::BatchInfoId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchOpenForSale` (r:1 w:1)
	/// Proof: `NftManager::BatchOpenForSale` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::BatchNonces` (r:1 w:1)
	/// Proof: `NftManager::BatchNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `NftManager::NftInfos` (r:1 w:0)
	/// Proof: `NftManager::NftInfos` (`max_values`: None, `max_size`: Some(559), added: 3034, mode: `MaxEncodedLen`)
	fn proxy_signed_end_batch_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `956`
		//  Estimated: `4024`
		// Minimum execution time: 175_354_000 picoseconds.
		Weight::from_parts(177_440_000, 4024)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
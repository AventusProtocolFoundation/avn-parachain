[package]
name = "pallet-validators-manager"
description = "Manages the AvN validators"
license = "GPL-3.0"

version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }

[dependencies]
log = { version = "0.4.20",  default-features = false }
serde = { version = "1.0.195", default-features = false, optional = true }
codec = { package = "parity-scale-codec", version = "3.6.1", features = ["derive"], default-features = false }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
scale-info = { version = "2.10.0", default-features = false, features = [
	"derive",
] }
rand = { version = "0.8.5", features = ["std_rng"], default-features = false, optional = true }

sp-avn-common = { default-features = false, path = "../../primitives/avn-common" }
pallet-avn = { default-features = false, path = "../avn" }

sp-std = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
sp-runtime = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
sp-core = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
sp-io = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
sp-application-crypto = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
sp-staking = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }

frame-support = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
frame-system = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
pallet-session = { features = [
	"historical",
], git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0", default-features = false }
hex-literal = { version = "0.4.1", default-features = false }
libsecp256k1 = { version = "0.7.0", default-features = false, features = [
	"hmac","static-context"
], optional = true }
sha3 = { version = "0.8", default-features = false, optional = true }

# Optional imports for benchmarking
frame-benchmarking = { default-features = false, git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0", optional = true }

[dev-dependencies]
frame-election-provider-support = { git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
pallet-timestamp = { git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
substrate-test-utils = { git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
parking_lot = { version = "0.12.0" }
pallet-balances = { git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0",features=["insecure_zero_ed"] }
sp-state-machine = { git = "https://github.com/paritytech/polkadot-sdk", branch = "release-polkadot-v1.6.0" }
pallet-avn-proxy = { default-features = false, path = "../avn-proxy" }
pallet-eth-bridge = { default-features = false, path = "../eth-bridge" }
sp-avn-common = { features=["test-utils"], path = "../../primitives/avn-common" }

[features]
migrate = []
default = ["std", "pallet-session/historical"]
std = [
	"frame-benchmarking?/std",
	"serde/std",
	"scale-info/std",
	"codec/std",
	"sp-std/std",
	"sp-io/std",
	"sp-core/std",
	"sp-runtime/std",
	"sp-application-crypto/std",
	"frame-support/std",
	"frame-system/std",
	"sp-avn-common/std",
	"sp-staking/std",
	"pallet-avn/std",
	"pallet-session/std",
	"libsecp256k1?/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"rand",
	"libsecp256k1",
	"sha3",
]
try-runtime = ["frame-support/try-runtime"]


//! Autogenerated weights for pallet_ethereum_events
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-05-21, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `nahu-Precision-7560`, CPU: `11th Gen Intel(R) Core(TM) i7-11850H @ 2.50GHz`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// .maintain/frame-weight-template.hbs
// --pallet
// pallet_ethereum_events
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// test_weights_1000_50.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_ethereum_events.
pub trait WeightInfo {
	fn add_validator_log(u: u32, e: u32, ) -> Weight;
	fn add_lift_log(u: u32, e: u32, ) -> Weight;
	fn add_ethereum_log(u: u32, e: u32, ) -> Weight;
	fn signed_add_ethereum_log(u: u32, e: u32, ) -> Weight;
	fn set_nft_contract_map_storage() -> Weight;
	fn submit_checkevent_result(v: u32, u: u32, ) -> Weight;
	fn process_event_with_successful_challenge(v: u32, e: u32, ) -> Weight;
	fn process_event_without_successful_challenge(v: u32, e: u32, ) -> Weight;
	fn challenge_event(v: u32, e: u32, c: u32, ) -> Weight;
	fn set_event_challenge_period() -> Weight;
}

/// Weights for pallet_ethereum_events using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Avn::AvnBridgeContractAddress` (r:1 w:0)
	/// Proof: `Avn::AvnBridgeContractAddress` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_validator_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `271 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 34_809_000 picoseconds.
		Weight::from_parts(28_530_844, 63886)
			// Standard Error: 987
			.saturating_add(Weight::from_parts(74_520, 0).saturating_mul(u.into()))
			// Standard Error: 10_066
			.saturating_add(Weight::from_parts(180_951, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Avn::AvnBridgeContractAddress` (r:1 w:0)
	/// Proof: `Avn::AvnBridgeContractAddress` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_lift_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `271 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 36_433_000 picoseconds.
		Weight::from_parts(32_001_612, 63886)
			// Standard Error: 924
			.saturating_add(Weight::from_parts(74_355, 0).saturating_mul(u.into()))
			// Standard Error: 9_423
			.saturating_add(Weight::from_parts(109_103, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_ethereum_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 33_029_000 picoseconds.
		Weight::from_parts(26_400_412, 63886)
			// Standard Error: 682
			.saturating_add(Weight::from_parts(70_856, 0).saturating_mul(u.into()))
			// Standard Error: 6_951
			.saturating_add(Weight::from_parts(169_991, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProxyNonces` (r:1 w:1)
	/// Proof: `EthereumEvents::ProxyNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn signed_add_ethereum_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 117_796_000 picoseconds.
		Weight::from_parts(98_484_117, 63886)
			// Standard Error: 4_034
			.saturating_add(Weight::from_parts(120_135, 0).saturating_mul(u.into()))
			// Standard Error: 41_112
			.saturating_add(Weight::from_parts(450_326, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumEvents::NftT1Contracts` (r:0 w:1)
	/// Proof: `EthereumEvents::NftT1Contracts` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_nft_contract_map_storage() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_229_000 picoseconds.
		Weight::from_parts(5_563_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventChallengePeriod` (r:1 w:0)
	/// Proof: `EthereumEvents::EventChallengePeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `u` is `[1, 499]`.
	fn submit_checkevent_result(_v: u32, u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `319 + u * (76 ±0) + v * (64 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 31_047_000 picoseconds.
		Weight::from_parts(45_963_269, 63886)
			// Standard Error: 2_015
			.saturating_add(Weight::from_parts(324_440, 0).saturating_mul(u.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:0)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:1 w:1)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:1 w:1)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:0 w:1)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `e` is `[1, 49]`.
	fn process_event_with_successful_challenge(v: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1025 + e * (122 ±0) + v * (74 ±0)`
		//  Estimated: `63886 + e * (122 ±0) + v * (75 ±0)`
		// Minimum execution time: 83_442_000 picoseconds.
		Weight::from_parts(91_420_924, 63886)
			// Standard Error: 58_214
			.saturating_add(Weight::from_parts(343_188, 0).saturating_mul(v.into()))
			// Standard Error: 11_382
			.saturating_add(Weight::from_parts(707_334, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(e.into()))
			.saturating_add(Weight::from_parts(0, 75).saturating_mul(v.into()))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:0)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:1 w:1)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:1 w:1)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:0 w:1)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `e` is `[1, 49]`.
	fn process_event_without_successful_challenge(v: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1036 + e * (122 ±0) + v * (64 ±0)`
		//  Estimated: `63886 + e * (122 ±0) + v * (64 ±0)`
		// Minimum execution time: 82_844_000 picoseconds.
		Weight::from_parts(90_020_351, 63886)
			// Standard Error: 63_127
			.saturating_add(Weight::from_parts(317_722, 0).saturating_mul(v.into()))
			// Standard Error: 12_343
			.saturating_add(Weight::from_parts(694_422, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(e.into()))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(v.into()))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:1)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `e` is `[1, 49]`.
	/// The range of component `c` is `[1, 49]`.
	fn challenge_event(_v: u32, e: u32, _c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `479 + c * (32 ±0) + e * (122 ±0) + v * (64 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 31_084_000 picoseconds.
		Weight::from_parts(53_941_368, 63886)
			// Standard Error: 18_669
			.saturating_add(Weight::from_parts(3_480, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumEvents::EventChallengePeriod` (r:0 w:1)
	/// Proof: `EthereumEvents::EventChallengePeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_event_challenge_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_882_000 picoseconds.
		Weight::from_parts(9_345_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Avn::AvnBridgeContractAddress` (r:1 w:0)
	/// Proof: `Avn::AvnBridgeContractAddress` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_validator_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `271 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 34_809_000 picoseconds.
		Weight::from_parts(28_530_844, 63886)
			// Standard Error: 987
			.saturating_add(Weight::from_parts(74_520, 0).saturating_mul(u.into()))
			// Standard Error: 10_066
			.saturating_add(Weight::from_parts(180_951, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Avn::AvnBridgeContractAddress` (r:1 w:0)
	/// Proof: `Avn::AvnBridgeContractAddress` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_lift_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `271 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 36_433_000 picoseconds.
		Weight::from_parts(32_001_612, 63886)
			// Standard Error: 924
			.saturating_add(Weight::from_parts(74_355, 0).saturating_mul(u.into()))
			// Standard Error: 9_423
			.saturating_add(Weight::from_parts(109_103, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn add_ethereum_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 33_029_000 picoseconds.
		Weight::from_parts(26_400_412, 63886)
			// Standard Error: 682
			.saturating_add(Weight::from_parts(70_856, 0).saturating_mul(u.into()))
			// Standard Error: 6_951
			.saturating_add(Weight::from_parts(169_991, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProxyNonces` (r:1 w:1)
	/// Proof: `EthereumEvents::ProxyNonces` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::TotalIngresses` (r:1 w:1)
	/// Proof: `EthereumEvents::TotalIngresses` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// The range of component `u` is `[1, 499]`.
	/// The range of component `e` is `[1, 49]`.
	fn signed_add_ethereum_log(u: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151 + e * (122 ±0) + u * (76 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 117_796_000 picoseconds.
		Weight::from_parts(98_484_117, 63886)
			// Standard Error: 4_034
			.saturating_add(Weight::from_parts(120_135, 0).saturating_mul(u.into()))
			// Standard Error: 41_112
			.saturating_add(Weight::from_parts(450_326, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumEvents::NftT1Contracts` (r:0 w:1)
	/// Proof: `EthereumEvents::NftT1Contracts` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_nft_contract_map_storage() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_229_000 picoseconds.
		Weight::from_parts(5_563_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::UncheckedEvents` (r:1 w:1)
	/// Proof: `EthereumEvents::UncheckedEvents` (`max_values`: Some(1), `max_size`: Some(38002), added: 38497, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventChallengePeriod` (r:1 w:0)
	/// Proof: `EthereumEvents::EventChallengePeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `u` is `[1, 499]`.
	fn submit_checkevent_result(_v: u32, u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `319 + u * (76 ±0) + v * (64 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 31_047_000 picoseconds.
		Weight::from_parts(45_963_269, 63886)
			// Standard Error: 2_015
			.saturating_add(Weight::from_parts(324_440, 0).saturating_mul(u.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:0)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:1 w:1)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:1 w:1)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:0 w:1)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `e` is `[1, 49]`.
	fn process_event_with_successful_challenge(v: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1025 + e * (122 ±0) + v * (74 ±0)`
		//  Estimated: `63886 + e * (122 ±0) + v * (75 ±0)`
		// Minimum execution time: 83_442_000 picoseconds.
		Weight::from_parts(91_420_924, 63886)
			// Standard Error: 58_214
			.saturating_add(Weight::from_parts(343_188, 0).saturating_mul(v.into()))
			// Standard Error: 11_382
			.saturating_add(Weight::from_parts(707_334, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(e.into()))
			.saturating_add(Weight::from_parts(0, 75).saturating_mul(v.into()))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:1)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::QuorumFactor` (r:1 w:0)
	/// Proof: `EthereumEvents::QuorumFactor` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:0)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:1 w:1)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:1 w:1)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:0 w:1)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 10]`.
	/// The range of component `e` is `[1, 49]`.
	fn process_event_without_successful_challenge(v: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1036 + e * (122 ±0) + v * (64 ±0)`
		//  Estimated: `63886 + e * (122 ±0) + v * (64 ±0)`
		// Minimum execution time: 82_844_000 picoseconds.
		Weight::from_parts(90_020_351, 63886)
			// Standard Error: 63_127
			.saturating_add(Weight::from_parts(317_722, 0).saturating_mul(v.into()))
			// Standard Error: 12_343
			.saturating_add(Weight::from_parts(694_422, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(e.into()))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(v.into()))
	}
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::EventsPendingChallenge` (r:1 w:0)
	/// Proof: `EthereumEvents::EventsPendingChallenge` (`max_values`: Some(1), `max_size`: Some(62401), added: 62896, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::Challenges` (r:1 w:1)
	/// Proof: `EthereumEvents::Challenges` (`max_values`: None, `max_size`: Some(1681), added: 4156, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `e` is `[1, 49]`.
	/// The range of component `c` is `[1, 49]`.
	fn challenge_event(_v: u32, e: u32, _c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `479 + c * (32 ±0) + e * (122 ±0) + v * (64 ±0)`
		//  Estimated: `63886`
		// Minimum execution time: 31_084_000 picoseconds.
		Weight::from_parts(53_941_368, 63886)
			// Standard Error: 18_669
			.saturating_add(Weight::from_parts(3_480, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumEvents::EventChallengePeriod` (r:0 w:1)
	/// Proof: `EthereumEvents::EventChallengePeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_event_challenge_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_882_000 picoseconds.
		Weight::from_parts(9_345_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
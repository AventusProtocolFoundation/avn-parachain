
//! Autogenerated weights for pallet_eth_bridge
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2025-04-01, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-2-182`, CPU: `AMD EPYC 7R32`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --template
// frame-weight-template.hbs
// --pallet
// pallet_eth_bridge
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// eth_bridge_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_eth_bridge.
pub trait WeightInfo {
	fn set_eth_tx_lifetime_secs() -> Weight;
	fn set_eth_tx_id() -> Weight;
	fn add_confirmation(v: u32, ) -> Weight;
	fn add_eth_tx_hash() -> Weight;
	fn add_corroboration() -> Weight;
	fn add_corroboration_with_challenge(v: u32, ) -> Weight;
	fn remove_active_request() -> Weight;
	fn submit_ethereum_events(c: u32, e: u32, ) -> Weight;
	fn submit_ethereum_events_and_process_batch(c: u32, e: u32, ) -> Weight;
	fn submit_latest_ethereum_block(c: u32, ) -> Weight;
	fn submit_latest_ethereum_block_with_quorum(c: u32, ) -> Weight;
	fn base_on_idle() -> Weight;
	fn migrate_events_batch(n: u32, ) -> Weight;
}

/// Weights for pallet_eth_bridge using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `EthBridge::EthTxLifetimeSecs` (r:0 w:1)
	/// Proof: `EthBridge::EthTxLifetimeSecs` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	fn set_eth_tx_lifetime_secs() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_560_000 picoseconds.
		Weight::from_parts(8_761_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::NextTxId` (r:0 w:1)
	/// Proof: `EthBridge::NextTxId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_eth_tx_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_530_000 picoseconds.
		Weight::from_parts(8_800_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `ValidatorsManager::EthereumPublicKeys` (r:1 w:0)
	/// Proof: `ValidatorsManager::EthereumPublicKeys` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 100]`.
	fn add_confirmation(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `979 + v * (85 ±0)`
		//  Estimated: `22429`
		// Minimum execution time: 94_852_000 picoseconds.
		Weight::from_parts(112_402_893, 22429)
			// Standard Error: 10_007
			.saturating_add(Weight::from_parts(155_383, 0).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	fn add_eth_tx_hash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437`
		//  Estimated: `22429`
		// Minimum execution time: 21_830_000 picoseconds.
		Weight::from_parts(27_061_000, 22429)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	fn add_corroboration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1245`
		//  Estimated: `22429`
		// Minimum execution time: 28_211_000 picoseconds.
		Weight::from_parts(34_411_000, 22429)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `Summary::TxIdToRoot` (r:1 w:0)
	/// Proof: `Summary::TxIdToRoot` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:2 w:2)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:2 w:2)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestQueue` (r:1 w:0)
	/// Proof: `EthBridge::RequestQueue` (`max_values`: Some(1), `max_size`: Some(79002), added: 79497, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SettledTransactions` (r:0 w:1)
	/// Proof: `EthBridge::SettledTransactions` (`max_values`: None, `max_size`: Some(819), added: 3294, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[4, 10]`.
	fn add_corroboration_with_challenge(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `86 + v * (247 ±0)`
		//  Estimated: `80487 + v * (139 ±7)`
		// Minimum execution time: 36_751_000 picoseconds.
		Weight::from_parts(37_721_000, 80487)
			// Standard Error: 132_787
			.saturating_add(Weight::from_parts(7_512_136, 0).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(v.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 139).saturating_mul(v.into()))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Summary::TxIdToRoot` (r:1 w:0)
	/// Proof: `Summary::TxIdToRoot` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestQueue` (r:1 w:0)
	/// Proof: `EthBridge::RequestQueue` (`max_values`: Some(1), `max_size`: Some(79002), added: 79497, mode: `MaxEncodedLen`)
	fn remove_active_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `586`
		//  Estimated: `80487`
		// Minimum execution time: 25_151_000 picoseconds.
		Weight::from_parts(25_720_000, 80487)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:0)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthereumEvents` (r:2 w:1)
	/// Proof: `EthBridge::EthereumEvents` (`max_values`: None, `max_size`: Some(46590), added: 49065, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	/// The range of component `e` is `[1, 32]`.
	fn submit_ethereum_events(_c: u32, _e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `327 + c * (64 ±0)`
		//  Estimated: `99120`
		// Minimum execution time: 31_651_000 picoseconds.
		Weight::from_parts(50_246_016, 99120)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:1)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthereumEvents` (r:2 w:1)
	/// Proof: `EthBridge::EthereumEvents` (`max_values`: None, `max_size`: Some(46590), added: 49065, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::ProcessedEthereumEvents` (r:1 w:1)
	/// Proof: `EthBridge::ProcessedEthereumEvents` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	/// The range of component `e` is `[1, 32]`.
	fn submit_ethereum_events_and_process_batch(c: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `685 + c * (75 ±0)`
		//  Estimated: `99120`
		// Minimum execution time: 97_662_000 picoseconds.
		Weight::from_parts(80_006_984, 99120)
			// Standard Error: 378_379
			.saturating_add(Weight::from_parts(4_293_520, 0).saturating_mul(c.into()))
			// Standard Error: 79_074
			.saturating_add(Weight::from_parts(641_173, 0).saturating_mul(e.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:0)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SubmittedEthBlocks` (r:2 w:1)
	/// Proof: `EthBridge::SubmittedEthBlocks` (`max_values`: None, `max_size`: Some(8214), added: 10689, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthBlockRangeSize` (r:1 w:0)
	/// Proof: `EthBridge::EthBlockRangeSize` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	fn submit_latest_ethereum_block(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `293 + c * (64 ±0)`
		//  Estimated: `22368`
		// Minimum execution time: 34_700_000 picoseconds.
		Weight::from_parts(31_114_569, 22368)
			// Standard Error: 136_992
			.saturating_add(Weight::from_parts(1_690_435, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:1)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SubmittedEthBlocks` (r:2 w:1)
	/// Proof: `EthBridge::SubmittedEthBlocks` (`max_values`: None, `max_size`: Some(8214), added: 10689, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthBlockRangeSize` (r:1 w:0)
	/// Proof: `EthBridge::EthBlockRangeSize` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::AdditionalEthereumEventsQueue` (r:1 w:0)
	/// Proof: `EthBridge::AdditionalEthereumEventsQueue` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	fn submit_latest_ethereum_block_with_quorum(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `316 + c * (85 ±0)`
		//  Estimated: `22368`
		// Minimum execution time: 46_721_000 picoseconds.
		Weight::from_parts(50_422_762, 22368)
			// Standard Error: 161_806
			.saturating_add(Weight::from_parts(874_805, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	fn base_on_idle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234`
		//  Estimated: `3546`
		// Minimum execution time: 4_170_000 picoseconds.
		Weight::from_parts(4_360_000, 3546)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `EthBridge::ProcessedEthereumEvents` (r:64 w:64)
	/// Proof: `EthBridge::ProcessedEthereumEvents` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:64 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 100]`.
	fn migrate_events_batch(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `206`
		//  Estimated: `20585 + n * (1808 ±25)`
		// Minimum execution time: 240_000 picoseconds.
		Weight::from_parts(86_234_062, 20585)
			// Standard Error: 113_236
			.saturating_add(Weight::from_parts(8_288_601, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 1808).saturating_mul(n.into()))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `EthBridge::EthTxLifetimeSecs` (r:0 w:1)
	/// Proof: `EthBridge::EthTxLifetimeSecs` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	fn set_eth_tx_lifetime_secs() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_560_000 picoseconds.
		Weight::from_parts(8_761_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::NextTxId` (r:0 w:1)
	/// Proof: `EthBridge::NextTxId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_eth_tx_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_530_000 picoseconds.
		Weight::from_parts(8_800_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `ValidatorsManager::EthereumPublicKeys` (r:1 w:0)
	/// Proof: `ValidatorsManager::EthereumPublicKeys` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[1, 100]`.
	fn add_confirmation(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `979 + v * (85 ±0)`
		//  Estimated: `22429`
		// Minimum execution time: 94_852_000 picoseconds.
		Weight::from_parts(112_402_893, 22429)
			// Standard Error: 10_007
			.saturating_add(Weight::from_parts(155_383, 0).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	fn add_eth_tx_hash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437`
		//  Estimated: `22429`
		// Minimum execution time: 21_830_000 picoseconds.
		Weight::from_parts(27_061_000, 22429)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	fn add_corroboration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1245`
		//  Estimated: `22429`
		// Minimum execution time: 28_211_000 picoseconds.
		Weight::from_parts(34_411_000, 22429)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `Summary::TxIdToRoot` (r:1 w:0)
	/// Proof: `Summary::TxIdToRoot` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Session::CurrentIndex` (r:1 w:0)
	/// Proof: `Session::CurrentIndex` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::Reports` (r:2 w:2)
	/// Proof: `Offences::Reports` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Offences::ConcurrentReportsIndex` (r:1 w:1)
	/// Proof: `Offences::ConcurrentReportsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AvnOffenceHandler::ReportedOffenders` (r:2 w:2)
	/// Proof: `AvnOffenceHandler::ReportedOffenders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `AvnOffenceHandler::SlashingEnabled` (r:1 w:0)
	/// Proof: `AvnOffenceHandler::SlashingEnabled` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestQueue` (r:1 w:0)
	/// Proof: `EthBridge::RequestQueue` (`max_values`: Some(1), `max_size`: Some(79002), added: 79497, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SettledTransactions` (r:0 w:1)
	/// Proof: `EthBridge::SettledTransactions` (`max_values`: None, `max_size`: Some(819), added: 3294, mode: `MaxEncodedLen`)
	/// The range of component `v` is `[4, 10]`.
	fn add_corroboration_with_challenge(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `86 + v * (247 ±0)`
		//  Estimated: `80487 + v * (139 ±7)`
		// Minimum execution time: 36_751_000 picoseconds.
		Weight::from_parts(37_721_000, 80487)
			// Standard Error: 132_787
			.saturating_add(Weight::from_parts(7_512_136, 0).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(v.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 139).saturating_mul(v.into()))
	}
	/// Storage: `EthBridge::ActiveRequest` (r:1 w:1)
	/// Proof: `EthBridge::ActiveRequest` (`max_values`: Some(1), `max_size`: Some(20944), added: 21439, mode: `MaxEncodedLen`)
	/// Storage: `Summary::TxIdToRoot` (r:1 w:0)
	/// Proof: `Summary::TxIdToRoot` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestQueue` (r:1 w:0)
	/// Proof: `EthBridge::RequestQueue` (`max_values`: Some(1), `max_size`: Some(79002), added: 79497, mode: `MaxEncodedLen`)
	fn remove_active_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `586`
		//  Estimated: `80487`
		// Minimum execution time: 25_151_000 picoseconds.
		Weight::from_parts(25_720_000, 80487)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:0)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthereumEvents` (r:2 w:1)
	/// Proof: `EthBridge::EthereumEvents` (`max_values`: None, `max_size`: Some(46590), added: 49065, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	/// The range of component `e` is `[1, 32]`.
	fn submit_ethereum_events(_c: u32, _e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `327 + c * (64 ±0)`
		//  Estimated: `99120`
		// Minimum execution time: 31_651_000 picoseconds.
		Weight::from_parts(50_246_016, 99120)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:1)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthereumEvents` (r:2 w:1)
	/// Proof: `EthBridge::EthereumEvents` (`max_values`: None, `max_size`: Some(46590), added: 49065, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::ProcessedEthereumEvents` (r:1 w:1)
	/// Proof: `EthBridge::ProcessedEthereumEvents` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	/// The range of component `e` is `[1, 32]`.
	fn submit_ethereum_events_and_process_batch(c: u32, e: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `685 + c * (75 ±0)`
		//  Estimated: `99120`
		// Minimum execution time: 97_662_000 picoseconds.
		Weight::from_parts(80_006_984, 99120)
			// Standard Error: 378_379
			.saturating_add(Weight::from_parts(4_293_520, 0).saturating_mul(c.into()))
			// Standard Error: 79_074
			.saturating_add(Weight::from_parts(641_173, 0).saturating_mul(e.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:0)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SubmittedEthBlocks` (r:2 w:1)
	/// Proof: `EthBridge::SubmittedEthBlocks` (`max_values`: None, `max_size`: Some(8214), added: 10689, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthBlockRangeSize` (r:1 w:0)
	/// Proof: `EthBridge::EthBlockRangeSize` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	fn submit_latest_ethereum_block(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `293 + c * (64 ±0)`
		//  Estimated: `22368`
		// Minimum execution time: 34_700_000 picoseconds.
		Weight::from_parts(31_114_569, 22368)
			// Standard Error: 136_992
			.saturating_add(Weight::from_parts(1_690_435, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthBridge::ActiveEthereumRange` (r:1 w:1)
	/// Proof: `EthBridge::ActiveEthereumRange` (`max_values`: Some(1), `max_size`: Some(544), added: 1039, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::SubmittedEthBlocks` (r:2 w:1)
	/// Proof: `EthBridge::SubmittedEthBlocks` (`max_values`: None, `max_size`: Some(8214), added: 10689, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::EthBlockRangeSize` (r:1 w:0)
	/// Proof: `EthBridge::EthBlockRangeSize` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Avn::Validators` (r:1 w:0)
	/// Proof: `Avn::Validators` (`max_values`: Some(1), `max_size`: Some(16386), added: 16881, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::AdditionalEthereumEventsQueue` (r:1 w:0)
	/// Proof: `EthBridge::AdditionalEthereumEventsQueue` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[4, 10]`.
	fn submit_latest_ethereum_block_with_quorum(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `316 + c * (85 ±0)`
		//  Estimated: `22368`
		// Minimum execution time: 46_721_000 picoseconds.
		Weight::from_parts(50_422_762, 22368)
			// Standard Error: 161_806
			.saturating_add(Weight::from_parts(874_805, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumEvents::ProcessedEvents` (r:1 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	fn base_on_idle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234`
		//  Estimated: `3546`
		// Minimum execution time: 4_170_000 picoseconds.
		Weight::from_parts(4_360_000, 3546)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `EthBridge::ProcessedEthereumEvents` (r:64 w:64)
	/// Proof: `EthBridge::ProcessedEthereumEvents` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `EthereumEvents::ProcessedEvents` (r:64 w:0)
	/// Proof: `EthereumEvents::ProcessedEvents` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 100]`.
	fn migrate_events_batch(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `206`
		//  Estimated: `20585 + n * (1808 ±25)`
		// Minimum execution time: 240_000 picoseconds.
		Weight::from_parts(86_234_062, 20585)
			// Standard Error: 113_236
			.saturating_add(Weight::from_parts(8_288_601, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(14_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 1808).saturating_mul(n.into()))
	}
}
// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_summary
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-12-08, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-15-201`, CPU: `AMD EPYC 7R32`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./avn-parachain-collator
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --template
// frame-weight-template.hbs
// --pallet
// pallet_summary
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// summary_default_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_summary.
pub trait WeightInfo {
	fn set_periods() -> Weight;
	fn record_summary_calculation(v: u32, r: u32, ) -> Weight;
	fn approve_root_with_end_voting(v: u32, o: u32, ) -> Weight;
	fn approve_root_without_end_voting(v: u32, ) -> Weight;
	fn reject_root_with_end_voting(v: u32, o: u32, ) -> Weight;
	fn reject_root_without_end_voting(v: u32, ) -> Weight;
	fn end_voting_period_with_rejected_valid_votes(v: u32, o: u32, ) -> Weight;
	fn end_voting_period_with_approved_invalid_votes(v: u32, o: u32, ) -> Weight;
	fn advance_slot_with_offence(v: u32, ) -> Weight;
	fn advance_slot_without_offence(v: u32, ) -> Weight;
	fn add_challenge(v: u32, ) -> Weight;
}

/// Weights for pallet_summary using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Summary NextBlockToProcess (r:1 w:0)
	// Storage: Summary VotingPeriod (r:0 w:1)
	// Storage: Summary NextSlotAtBlock (r:0 w:1)
	// Storage: Summary SchedulePeriod (r:0 w:1)
	fn set_periods() -> Weight {
		Weight::from_ref_time(22_360_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Summary TotalIngresses (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary NextBlockToProcess (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary VotingPeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `r` is `[1, 2]`.
	fn record_summary_calculation(v: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(48_796_104)
			// Standard Error: 47_650
			.saturating_add(Weight::from_ref_time(281_182).saturating_mul(v.into()))
			// Standard Error: 232_674
			.saturating_add(Weight::from_ref_time(1_250_810).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Offences Reports (r:2 w:2)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:2 w:2)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:0 w:1)
	// Storage: Summary NextBlockToProcess (r:0 w:1)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn approve_root_with_end_voting(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(132_939_269)
			// Standard Error: 112_499
			.saturating_add(Weight::from_ref_time(467_366).saturating_mul(v.into()))
			// Standard Error: 549_328
			.saturating_add(Weight::from_ref_time(13_106_978).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(7))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:0)
	/// The range of component `v` is `[4, 10]`.
	fn approve_root_without_end_voting(v: u32, ) -> Weight {
		Weight::from_ref_time(59_737_925)
			// Standard Error: 64_303
			.saturating_add(Weight::from_ref_time(171_752).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Offences Reports (r:3 w:3)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:3 w:3)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn reject_root_with_end_voting(_v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(155_524_189)
			// Standard Error: 644_337
			.saturating_add(Weight::from_ref_time(14_279_952).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:0)
	/// The range of component `v` is `[4, 10]`.
	fn reject_root_without_end_voting(v: u32, ) -> Weight {
		Weight::from_ref_time(56_613_279)
			// Standard Error: 57_478
			.saturating_add(Weight::from_ref_time(4_102).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Summary VotesRepository (r:1 w:0)
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:2 w:2)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:2 w:2)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:0 w:1)
	// Storage: Summary NextBlockToProcess (r:0 w:1)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn end_voting_period_with_rejected_valid_votes(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(88_168_960)
			// Standard Error: 191_153
			.saturating_add(Weight::from_ref_time(138_696).saturating_mul(v.into()))
			// Standard Error: 444_273
			.saturating_add(Weight::from_ref_time(14_055_287).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary VotesRepository (r:1 w:0)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:3 w:3)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:3 w:3)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn end_voting_period_with_approved_invalid_votes(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(111_219_515)
			// Standard Error: 215_191
			.saturating_add(Weight::from_ref_time(407_065).saturating_mul(v.into()))
			// Standard Error: 500_140
			.saturating_add(Weight::from_ref_time(12_824_282).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:1 w:1)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:1 w:1)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[5, 10]`.
	fn advance_slot_with_offence(v: u32, ) -> Weight {
		Weight::from_ref_time(85_228_052)
			// Standard Error: 112_713
			.saturating_add(Weight::from_ref_time(490_220).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	fn advance_slot_without_offence(v: u32, ) -> Weight {
		Weight::from_ref_time(37_301_189)
			// Standard Error: 33_759
			.saturating_add(Weight::from_ref_time(8_313).saturating_mul(v.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:1 w:1)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:1 w:1)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	fn add_challenge(_v: u32, ) -> Weight {
		Weight::from_ref_time(124_179_936)
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(7))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Summary NextBlockToProcess (r:1 w:0)
	// Storage: Summary VotingPeriod (r:0 w:1)
	// Storage: Summary NextSlotAtBlock (r:0 w:1)
	// Storage: Summary SchedulePeriod (r:0 w:1)
	fn set_periods() -> Weight {
		Weight::from_ref_time(21_330_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: Summary TotalIngresses (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary NextBlockToProcess (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary VotingPeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `r` is `[1, 2]`.
	fn record_summary_calculation(v: u32, r: u32, ) -> Weight {
		Weight::from_ref_time(48_796_104)
			// Standard Error: 47_650
			.saturating_add(Weight::from_ref_time(281_182).saturating_mul(v.into()))
			// Standard Error: 232_674
			.saturating_add(Weight::from_ref_time(1_250_810).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(8))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Offences Reports (r:2 w:2)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:2 w:2)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:0 w:1)
	// Storage: Summary NextBlockToProcess (r:0 w:1)
	/// The range of component `v` is `[3, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn approve_root_with_end_voting(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(132_939_269)
			// Standard Error: 112_499
			.saturating_add(Weight::from_ref_time(467_366).saturating_mul(v.into()))
			// Standard Error: 549_328
			.saturating_add(Weight::from_ref_time(13_106_978).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(9))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(7))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:0)
	/// The range of component `v` is `[4, 10]`.
	fn approve_root_without_end_voting(v: u32, ) -> Weight {
		Weight::from_ref_time(59_737_925)
			// Standard Error: 64_303
			.saturating_add(Weight::from_ref_time(171_752).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Offences Reports (r:3 w:3)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:3 w:3)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn reject_root_with_end_voting(_v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(155_524_189)
			// Standard Error: 644_337
			.saturating_add(Weight::from_ref_time(14_279_952).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(10))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(6))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary VotesRepository (r:1 w:1)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:0)
	/// The range of component `v` is `[4, 10]`.
	fn reject_root_without_end_voting(v: u32, ) -> Weight {
		Weight::from_ref_time(56_613_279)
			// Standard Error: 57_478
			.saturating_add(Weight::from_ref_time(4_102).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Summary VotesRepository (r:1 w:0)
	// Storage: Summary Roots (r:1 w:1)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:2 w:2)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:2 w:2)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:0 w:1)
	// Storage: Summary NextBlockToProcess (r:0 w:1)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn end_voting_period_with_rejected_valid_votes(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(88_168_960)
			// Standard Error: 191_153
			.saturating_add(Weight::from_ref_time(138_696).saturating_mul(v.into()))
			// Standard Error: 444_273
			.saturating_add(Weight::from_ref_time(14_055_287).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(9))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(6))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary VotesRepository (r:1 w:0)
	// Storage: Summary Roots (r:1 w:0)
	// Storage: Summary PendingApproval (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:3 w:3)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:3 w:3)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	/// The range of component `v` is `[7, 10]`.
	/// The range of component `o` is `[1, 2]`.
	fn end_voting_period_with_approved_invalid_votes(v: u32, o: u32, ) -> Weight {
		Weight::from_ref_time(111_219_515)
			// Standard Error: 215_191
			.saturating_add(Weight::from_ref_time(407_065).saturating_mul(v.into()))
			// Standard Error: 500_140
			.saturating_add(Weight::from_ref_time(12_824_282).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(10))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(5))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:1 w:1)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:1 w:1)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[5, 10]`.
	fn advance_slot_with_offence(v: u32, ) -> Weight {
		Weight::from_ref_time(85_228_052)
			// Standard Error: 112_713
			.saturating_add(Weight::from_ref_time(490_220).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(12))
			.saturating_add(RocksDbWeight::get().writes(7))
	}
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	fn advance_slot_without_offence(v: u32, ) -> Weight {
		Weight::from_ref_time(37_301_189)
			// Standard Error: 33_759
			.saturating_add(Weight::from_ref_time(8_313).saturating_mul(v.into()))
			.saturating_add(RocksDbWeight::get().reads(6))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: Summary CurrentSlot (r:1 w:1)
	// Storage: Summary CurrentSlotsValidator (r:1 w:1)
	// Storage: Summary NextSlotAtBlock (r:1 w:1)
	// Storage: Session CurrentIndex (r:1 w:0)
	// Storage: Avn Validators (r:1 w:0)
	// Storage: Offences Reports (r:1 w:1)
	// Storage: Offences ReportsByKindIndex (r:1 w:1)
	// Storage: Offences ConcurrentReportsIndex (r:1 w:1)
	// Storage: AvnOffenceHandler ReportedOffenders (r:1 w:1)
	// Storage: AvnOffenceHandler SlashingEnabled (r:1 w:0)
	// Storage: Summary SlotOfLastPublishedSummary (r:1 w:0)
	// Storage: Summary SchedulePeriod (r:1 w:0)
	/// The range of component `v` is `[3, 10]`.
	fn add_challenge(_v: u32, ) -> Weight {
		Weight::from_ref_time(124_179_936)
			.saturating_add(RocksDbWeight::get().reads(12))
			.saturating_add(RocksDbWeight::get().writes(7))
	}
}
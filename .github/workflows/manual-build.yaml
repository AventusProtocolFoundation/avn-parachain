# This workflow is used to create git tags and releases with all needed artefacts automatically from a branch
# If RELEASE is set to true, a git release will be created, with all needed artefacts.
# If RELEASE is set to false, only build and push a docker image to the ECR with the commit hash
name: CI Manual

on:
  workflow_dispatch:
    inputs:
      RELEASE:
        required: true
        type: boolean
        description: Should we create a git release? Use it if it's a hotfix
      GIT_TAG:
        required: false
        type: string
        description: which tag do you want to create?
      TEST_CODE:
        required: true
        type: boolean
        description: Should we run the tests ?


concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  set-up-job:
    runs-on: ubuntu-latest
    outputs:
      RELEASE: ${{ steps.set.outputs.RELEASE }}
      GIT_TAG: ${{ steps.set.outputs.GIT_TAG }}
      TEST_CODE: ${{ steps.set.outputs.TEST_CODE }}
    steps:
      - name: Set outputs from workflow inputs
        id: set
        run: |
          echo "Release: ${{ github.event.inputs.RELEASE }}"
          echo "Git tag: ${{ github.event.inputs.GIT_TAG }}"
          echo "Test code: ${{ github.event.inputs.TEST_CODE }}"

          echo "RELEASE=${{ github.event.inputs.RELEASE }}" >> "$GITHUB_OUTPUT"
          echo "GIT_TAG=${{ github.event.inputs.GIT_TAG }}" >> "$GITHUB_OUTPUT"
          echo "TEST_CODE=${{ github.event.inputs.TEST_CODE }}" >> "$GITHUB_OUTPUT"

      - name: verify GIT TAG
        run: |
          VERSION=${{ github.event.inputs.GIT_TAG }}
          rx='^v([0-9]+\.){0,2}(\*|[0-9]+)$'

          if [[ $VERSION =~ $rx ]]; then
            echo "version $VERSION matches the semver scheme 'vX.Y.Z' (prod tags). This workflow can only be used without prod tags";
            exit 1
          fi
  test-code:
    needs: [set-up-job]
    if: ${{ needs.set-up-job.outputs.TEST_CODE == 'true' }}
    uses: ./.github/workflows/cargo-test.yml

  build-code:
    needs: [ set-up-job ]
    uses: ./.github/workflows/cargo-build.yml
    with:
      upload_artifacts: true
    secrets: inherit

  build-code-ubuntu2404:
    needs: [ set-up-job ]
    uses: ./.github/workflows/cargo-build.yml
    with:
      runs_on: gh-ubuntu-2404-x64
      parachain-collator-artifact: parachain-collator
      parachain-runtime-artifact: parachain-runtime
      parachain-test-runtime-artifact: parachain-test-runtime
      upload_artifacts: true
    secrets: inherit

  build-docker:
    needs: [ set-up-job, build-code-ubuntu2404, test-code ]
    if: |
      always() &&
      (needs.build-code-ubuntu2404.result == 'success') &&
      (needs.test-code.result == 'success' || needs.test-code.result == 'skipped')
    uses: ./.github/workflows/docker-build.yml
    with:
      parachain-collator-artifact: parachain-collator
      parachain-runtime-artifact: parachain-runtime
      release: ${{ needs.set-up-job.outputs.RELEASE }}
      docker_tag: ${{ needs.set-up-job.outputs.GIT_TAG }}
    secrets: inherit

  test-conditions00:
    needs: [ set-up-job, build-docker, build-code, build-code-ubuntu2404 ]
    runs-on: gh-ubuntu-2404-x64
    if: ${{ always() }}
    steps:
      - name: Echo needs results and input values
        run: |
          echo "### Job Results:"
          echo "build-code-ubuntu2404 result: ${{ needs.build-code-ubuntu2404.result }}"
          echo "build-code result: ${{ needs.build-code.result }}"
          echo "build-docker result: ${{ needs.build-docker.result }}"
          echo "set-up-job result: ${{ needs.set-up-job.result }}"

          echo "### Output Values:"
          echo "RELEASE: ${{ needs.set-up-job.outputs.RELEASE }}"
          echo "GIT_TAG: ${{ needs.set-up-job.outputs.GIT_TAG }}"
          echo "TEST_CODE: ${{ needs.set-up-job.outputs.TEST_CODE }}"

          echo "### Raw Inputs:"
          echo "RELEASE (raw): ${{ github.event.inputs.RELEASE }}"
          echo "GIT_TAG (raw): ${{ github.event.inputs.GIT_TAG }}"
          echo "TEST_CODE (raw): ${{ github.event.inputs.TEST_CODE }}"
          
  test-conditions01:
    needs: [ set-up-job, build-docker, build-code, build-code-ubuntu2404 ]
    runs-on: gh-ubuntu-2404-x64
    steps:
      - name: Echo needs results and input values
        run: |
          echo "### Job Results:"
          echo "build-code-ubuntu2404 result: ${{ needs.build-code-ubuntu2404.result }}"
          echo "build-code result: ${{ needs.build-code.result }}"
          echo "build-docker result: ${{ needs.build-docker.result }}"
          echo "set-up-job result: ${{ needs.set-up-job.result }}"

          echo "### Output Values:"
          echo "RELEASE: ${{ needs.set-up-job.outputs.RELEASE }}"
          echo "GIT_TAG: ${{ needs.set-up-job.outputs.GIT_TAG }}"
          echo "TEST_CODE: ${{ needs.set-up-job.outputs.TEST_CODE }}"

          echo "### Raw Inputs:"
          echo "RELEASE (raw): ${{ github.event.inputs.RELEASE }}"
          echo "GIT_TAG (raw): ${{ github.event.inputs.GIT_TAG }}"
          echo "TEST_CODE (raw): ${{ github.event.inputs.TEST_CODE }}"

  release:
    needs: [ set-up-job, build-docker ]
    if: ${{ needs.set-up-job.outputs.RELEASE == 'true' }}
    uses: ./.github/workflows/gh-release.yml
    with:
      repo_tag: ${{ needs.set-up-job.outputs.GIT_TAG }}
      hotfix: true
    secrets: inherit

  upload-assets-internal-tools:
    needs: [ set-up-job, build-docker ]
    if: ${{ needs.set-up-job.outputs.RELEASE == 'true' }}
    uses: ./.github/workflows/s3-upload.yml
    with:
      bucket_name: "s3://aventus-internal-artefact/avn-node-parachain-artefacts"
      repo_tag: ${{ needs.set-up-job.outputs.GIT_TAG }}
    secrets: inherit

  upload-assets-internal-tools-ubuntu2404:
    needs: [ set-up-job, build-docker ]
    if: ${{ needs.set-up-job.outputs.RELEASE == 'true' }}
    uses: ./.github/workflows/s3-upload.yml
    with:
      runs_on: gh-ubuntu-2404-x64
      parachain-collator-artifact: parachain-collator
      parachain-runtime-artifact: parachain-runtime
      parachain-test-runtime-artifact: parachain-test-runtime
      bucket_name: "s3://aventus-internal-artefact/avn-parachain-node-artefacts"
      repo_tag: ${{ needs.set-up-job.outputs.GIT_TAG }}
    secrets: inherit
